
Tx format:
  - replay-info(*)                            ]
  - metadata (gas limit, fee)                 ]
  - exec-script                 	      ]  covered by TxID
  - method                 		      ]
  - call-data                 		      ]
  - witness-data


(*) What is replay-info?  possibilities below:

# Design 1

replay info is list of:  <replay-cache-id, seqNum>

Replay cache (first-class ledger entry):
  - seqNum
  - key-(seqNum,value) map
  - validation script: (tx, replay-cache) -> ‚ä• | replay-cache-entries

Tx invalid if seqNum in replay-info is less than in replay cache

Bumping seqNum (in exec-script) deletes all entries in the map with
lower seqNum values

Replay prevention:
  seqNum is timestamp (minute granularity epoch #)
  script refuses if timestamp < seqNum
  script requires witness-data to include appropriate signature
  script updates seqNum to timestamp (flushing timestamp-1 and earlier)
  No coordination needed between machines issuing payments at bank

Ratchet: bump sequence number to invalidate old signed transaction




====

Have a simple reader-writer (shared/exclusive) lock.

In a payment channel/relative timelock/declare-then-close paradigm:

Declare transaction require a shared lock
   Delta is max(prev-version, new-version)
   Note: technically don't even need the shared lock
Close transactions require an exclusive lock
   Enforce relative timelock in the contrack

Q: How to prevent spam on locks
   Lock has script to validate transaction
Q: Should we pre-specify all locks
   Problem: what if you want to auction a lock
            or otherwise dynamically chose who should get it

Proposal: lock validation script outputs 0 for rejected
   otherwise, outputs a score.  Highest (score, tx-hash) wins?

Note: we aren't too worried about rogue nodes proposing illegal blocks
that take time to validate, since there shouldn't be anonymous miners
participating in a wholesale CBDC.

Declare transaction must write current time for relative timelock.  So
is that a dynamic delta?  Or is current time/ledger number just one of
a small number of things that should be encodable in deltas, as well
as immediate values.

What about oracle feed?  That won't depend on on-chain state.
