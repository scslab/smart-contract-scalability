
Tx format:
  - replay-info(*)                            ]
  - metadata (gas limit, fee)                 ]
  - exec-script                               ]  covered by TxID
  - method                                    ]
  - call-data                                 ]
  - witness-data


(*) What is replay-info?  possibilities below:

# Design 1

replay info is list of:  <replay-cache-id, seqNum>

Replay cache (first-class ledger entry):
  - seqNum
  - key-(seqNum,value) map
  - validation script: (tx, replay-cache) -> ‚ä• | replay-cache-entries

Tx invalid if seqNum in replay-info is less than in replay cache

Bumping seqNum (in exec-script) deletes all entries in the map with
lower seqNum values

Replay prevention:
  seqNum is timestamp (minute granularity epoch #)
  script refuses if timestamp < seqNum
  script requires witness-data to include appropriate signature
  script updates seqNum to timestamp (flushing timestamp-1 and earlier)
  No coordination needed between machines issuing payments at bank

Ratchet: bump sequence number to invalidate old signed transaction

# Design 2

Replay prevention is a mechanism for preventing replays across blocks, needs storage of data
for a potentially long period of time (bounded).
Semaphores only apply to one block.  Any longer-running semaphore-like objects can be built on-chain, in the exec script.


