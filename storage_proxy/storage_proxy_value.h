#pragma once

/**
 * Copyright 2023 Geoffrey Ramseyer
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "storage_proxy/proxy_applicator.h"

#include "xdr/storage_delta.h"

namespace scs
{

// writes generated by one tx on one key
struct StorageProxyValue
{
	ProxyApplicator applicator;

	StorageProxyValue(std::optional<StorageObject> const& obj)
		: applicator(obj)
	{}
};

} /* scs */
